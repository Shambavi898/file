# ProductivitySuite/docker-compose.yml
version: '3.8'

services:
  app:
    build: .
    container_name: productivity-suite
    ports:
      - "3000:3000"
      - "9229:9229" # Node.js debug port
    environment:
      - NODE_ENV=production
      - PORT=3000
      - MAX_CONCURRENT_USERS=100000
      - MEMORY_CACHE_SIZE=1GB
      - DISABLE_LOGGING=false
    volumes:
      - ./src:/app/src
      - ./public:/app/public
      - ./assets:/app/assets
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 8G
        reservations:
          cpus: '1'
          memory: 2G
    networks:
      - prod-network

  redis:
    image: redis:alpine
    container_name: productivity-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    networks:
      - prod-network

  load-balancer:
    image: nginx:alpine
    container_name: productivity-lb
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - app
    networks:
      - prod-network

volumes:
  redis_data:

networks:
  prod-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16